sort(gdp_country$V2,decreasing=TRUE)
colnames(gdp_country) = c("CountryCode","Ranking","Long.Name","GDP","NA")
gpd_country = gpd_country[,c(-4)]
gdp_country = gdp_country[,c(-4)]
gdp_country
gdp_country = gdp[1:190,c(-3,-6)]
colnames(gdp_country) = c("CountryCode","Ranking","Long.Name","GDP")
gdp_country
mergedData = merge(edu,gdp_country)
head(mergedData)
tapply(mergedData$Ranking,mergedData$Income.Group,mean)
tail(mergedData,1)
gdp_country = gdp_country[,c(-3)]
gpd_country
gdp_country
mergedData = merge(edu,gdp_country)
tapply(mergedData$Ranking,mergedData$Income.Group,mean)
quantile(mergedData$Ranking,na.rm=TRUE)
quantile(mergedData$Ranking,na.rm=TRUE,g=5)
quantile(mergedData$Ranking)
table(mergedData$Ranking,mergedData$Income.Group)
quantile(mergedData$Ranking,na.rm=TRUE,prob=c(0.2,0.4,0.6,0.8,1))
?filter
top_ranking <- filter(mergedData,mergedData$Ranking < 39)
dim(top_ranking)
head(top_ranking)
top_ranking
top_ranking <- filter(mergedData,mergedData$Ranking > 38)
mergedData$groups = cut(mergedData$Ranking, breaks=quantile(mergedData$Ranking,probs=c(0.2,0.4,0.6,0.8,1)))
table(mergedData$groups)
table(mergedData$groups,mergedData$Income.group)
table(mergedData$groups,mergedData$Income.Group)
mergedData$groups = cut(mergedData$Ranking, breaks=quantile(mergedData$Ranking))
table(mergedData$groups)
mergedData$groups = cut(mergedData$Ranking, breaks=quantile(mergedData$Ranking,probs=c(0,0.2,0.5,0.8,1)))
table(mergedData$groups)
mergedData$groups = cut(mergedData$Ranking, breaks=quantile(mergedData$Ranking,probs=c(0,0.2,0.4,0.6,0.8,1)))
table(mergedData$groups)
mergedData$groups = cut(mergedData$Ranking, breaks=quantile(mergedData$Ranking,probs=c(0,0.25,0.4,0.6,0.8,1)))
table(mergedData$groups)
mergedData$groups = cut(mergedData$Ranking, breaks=quantile(mergedData$Ranking,probs=c(0,0.21,0.4,0.6,0.8,1)))
table(mergedData$groups)
mergedData$groups = cut(mergedData$Ranking, breaks=quantile(mergedData$Ranking,probs=c(0,0.205,0.4,0.6,0.8,1)))
table(mergedData$groups)
table(mergedData$groups,mergedData$Income.Group)
mergedData$groups = cut(mergedData$Ranking, breaks=quantile(mergedData$Ranking,probs=c(0,0.2,0.4,0.6,0.8,1)))
table(mergedData$groups)
table(mergedData$groups,mergedData$Income.Group)
q()
library(swirl)
ls()
rm(list=ls())
swirl()
library(tidyr)
stduents
students
?gather
gather(students, sex, count, -grade)
student2
students2
gather(students2, sex_class, value, -grade)
info()
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(data=res, col=sex_class, into=c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
?unique
submit()
submit()
passed
failed
mutate(passed,status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?rbind_list
rbind_list(passed,failed)
sat
submit()
submit()
submit()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day=today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_data <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(15081985)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 15, minutes = 30, seconds = 55)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17,  minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time,arrive)
as.periol(how_long)
as.period(how_long)
stopwatch()
list()
q()
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl,destfile="~/Desktop/IDhousing.csv",method="curl")
IDhousing <- read.csv("~/Desktop/IDhousing.csv")
dim(IDhousing)
names(IDhousing)
splitNames = strsplit(names(IDhousing),"wgtp")
dim(splitNames)
splitNames
fileurl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileurl1,destfile="~/Desktop/GDP.csv",method="curl")
?read.csv
x <- x[-(1:5)]
gdp <- read.csv("~/Desktop/GDP.csv",skip = 5,nrows = 190)
dim(gdp)
gdp
gdp <- read.csv("~/Desktop/GDP.csv",skip = 5,nrows = 190,header=FALSE)
gdp
dim(gdp)
gdp <- read.csv("~/Desktop/GDP.csv",skip = 5,nrows = 190,header=FALSE,colClasses=c(NA,NA,"NULL",NA,NA,"NULL","NULL","NULL","NULL","NULL"))
dim(gdp)
gdp
gdp[,V5]
gdp[,4]
money <- gsub(",","",gdp[,4])
money
money <- as.numeric(money)
money
avg <- mean(money)
avg
gdp
gdp[,3]
grep("^United",gdp[,3])
countryNames <- gdp[,3]
grep("^United",countryNames)
download.file(fileurl2,destfile="~/Desktop/Edu.csv",method="curl")
fileurl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileurl2,destfile="~/Desktop/Edu.csv",method="curl")
edu <- read.csv("~/Desktop/Edu.csv")
names(edu)
colnames(gdp) = c("CountryCode","Ranking","Long.Name","Money")
gdp2 = gdp[,-3]
gdp2
mergedData = merge(edu,gdp2)
dim(mergedData)
dim(edu)
dim(gdp2)
names(mergedData)
grep("Fiscal year end:",mergedData$Special.Notes)
rows <- grep("Fiscal year end:",mergedData$Special.Notes)
sub <- mergedData[rows,]
grep("Fiscal year end: June",mergedData$Special.Notes)
grep("Fiscal year end: June",edu$Special.Notes)
grep("June",sub$Special.Notes)
rm(sub)
rm(edu)
rm(gdp)
rm(gdp2)
rm(IDhousing)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
amzn
head(amzn)
grep("2012",sampleTimes)
grepl("2012",sampleTimes)
weekdays(sampleTimes)
row <- grep("2012",sampleTimes)
wd <- weekdays(sampleTimes)
dim(wd)
wd[1]
wd[,1]
wd[1,]
year <- wd[row]
year
grep("Monday",year)
dim(data.frame(grep("Monday",year)))
q()
all.files[74]
pdb <- read.pdb(all.files[74])
library(Bio3d)
library(bio3d)
pdb <- read.pdb(all.files[74])
pdb
pdb$atom[inds$atom,]
pdb$seqres
pdbseq(pdb)
tor <- torsion.pdb(pdb)
tor$omega
temp <- data.frame(tor$omega)
temp
temp2 <- pdbseq(pdb)
temp2 <- data.frame(temp2)
temp2
temp2 <- temp2[-1,]
temp2
temp2 <- pdbseq(pdb)
temp2
temp2 <- data.frame(temp2)
temp2[1,]
temp2[,1]
a <- data.frame(temp2[-1,])
a
head(temp2)
temp2[1,]
rownames(temp2)
pdb$resno
head(pdb)
pdb$atom
pdb$atom$resno
resno <- rownames(temp2)
resno
resno <- data.frame(rownames(temp2))
resno
a <- resno[-1,]
a
temp2 <- temp2[-1,]
temp2
dim(temp2)
resid <- cbind(a,temp2)
resid
resid <- rbind(a,temp2)
resid
temp2
temp2 <- data.frame(temp2)
a <- data.frame(a)
resid <- cbind(a,temp2)
resid
colnames(resid) = c("resno","resid")
resid
temp
?rle
?diff
rle(diff(resid$resno))
resid$resno
a <- resid$resno
rle(diff(a))
a <- as.matrix(a)
rle(diff(a))
a
a <- as.numeric(a)
a
rle(diff(a))
diff(a)
which(diff(a)!=1)
break <- which(diff(a)!=1)
b <- which(diff(a)!=1)
?break
resid2 <- rbind(resid[1:b,],data.frame(resno = "NA",resid = "NA"),resid[-(1:b),])
resid2
sample <- cbind(resid,temp)
sample <- cbind(resid2,temp)
resid2
resid2 <- data.frame(resid2)
resid2
row(resid2)
rownames(resid2)
nrow(resid2)
rownames(resid2) = 1:nrow(resid2)
reisd2
resid2
sample <- cbind(resid2,temp)
library(plyr)
?rbind.fill
?cbind.fill
sample <- rbind.fill(resid2,temp)
sample
sample <- merge(resid2,temp,by=rownames)
sample <- merge(resid2,temp,by="row.names")
sample
sort(sample$row.names)
?sort
sample[order(sample$Row.names),]
sample[sort(sample$Row.names),]
sample[sort(as.numeric(sample$Row.names)),]
sort(sample$Row.names)
as.numeric(sample$Row.names)
sort(as.numeric(sample$Row.names))
sample$Row.names = as.numeric(sample$Row.names)
sort(sample$Row.names)
sample[order(sample$Row.names),]
sample[sort(sample$Row.names),]
sample[order(sample$Row.names),]
sample <- sample[order(sample$Row.names),]
n <- max(length(resid2),length(temp))
n
length(resid2)
length(temp)
nrow(resid2)
n <- max(nrow(resid2),nrow(temp))
n
resid3 <- resid2
nrow(resid3) <- n
nrow(resid3) = n
rm(resid3)
table <- sample[,2:4]
table
temp
rownames(table) = 1:nrow(table)
table
temp2
q()
library(bio3d)
mydcd <- "/Volumes/ADABAK/p53_42/hum/output_pm/cisMD/1/pmcis.dcd"
dcd <- read.dcd(mydcd)
mydcd <- "/Volumes/ADABAK/p53_42/hum/output_pm/cisMD/2/pmcis.dcd"
dcd <- read.dcd(mydcd)
mydcd <- "/Volumes/ADABAK/p53_42/hum/output_pm/cisMD/2/all.dcd"
dcd <- read.dcd(mydcd)
?dcd.header()
mydcd <- "/Volumes/ADABAK/p53_42/hum/output_pm/cisMD/3/pmcis.dcd"
dcd <- read.dcd(mydcd,cell=TRUE)
mydcd <- "/Volumes/ADABAK/p53_coan/hum/output_pm/cisMD/4/all.dcd"
dcd <- read.dcd(mydcd,cell=TRUE)
mydcd <- "/Volumes/ADABAK/p53_42/hum/output_pm/cisMD/5/unwraped.dcd"
dcd <- read.dcd(mydcd,cell=TRUE)
mydcd <- "/Volumes/ADABAK/p53_42/hum/output_pm/cisMD/6/unwraped.dcd"
dcd <- read.dcd(mydcd,cell=TRUE)
q()
rm(dcd)
q()
library(bio3d)
mydcd <- "/Volumes/ADABAK/p53_42/hum/output_pm/cisMD/pmcischainB_CAfitted.dcd"
dcd <- read.dcd(mydcd,cell=TRUE)
rm(dcd)
q()
setwd("~/")
library(datasets)
data(iris)
?iris
tapply(iris$Sepal.Length,virginica,mean, na.rm = R)
tapply(iris$Sepal.Length,virginica,mean, na.rm = T)
head(iris)
tapply(iris$Sepal.Length,iris$Speices=virginica,mean, na.rm = T)
tapply(iris$Sepal.Length,iris$Speices,mean, na.rm = T)
tapply(iris$Sepal.Length,iris$Species,mean, na.rm = T)
tapply(iris$Sepal.Length,iris$Species = "virginica",mean, na.rm = T)
apply(iris[,1:4],1,mean)
dim(iris)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
head(mtcars)
sapply(mtcars,cyl,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean,na.rm=T)
a <- tapply(mtcars$hp,mtcars$cyl,mean,na.rm=T)
a
a$8
a[1,1]
a = dataframe(a)
a = data.frame(a)
a
a[1,1]
a[3,1]
a[3,1]-a[1,1]
debug(ls)
Ls
ls()
?ls()
.Ob <- 1
ls(pattern = "O")
ls(pattern = "O", all.names = TRUE)
debug(ls)
ls(pattern = "O", all.names = TRUE)
9
3
2
1
4
q()
c()
Q()
undebug(ls)
q()
q()
setwd("/Volumes/ADABAK/datasciencecoursera/untitled folder")
require(slidify)
author('interactive')
slidify('indext.Rmd')
slidify('index.Rmd')
browse('index.html')
browseURL('index.html')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
setwd("~/Dropbox/BCBdissertation/prelimtalk")
slidify('index.Rmd')
browseURL('index.html')
setwd("/Volumes/ADABAK/datasciencecoursera/untitled folder")
slidify('index.Rmd')
setwd("/Volumes/ADABAK/datasciencecoursera/untitled folder/interactive")
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
sessionInfo()
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
sessionInfo()
sessionInfo()
slidify('index.Rmd')
sessionInfo()
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
sessionInfo()
q()
